{"version":3,"sources":["components/TableHead/TableHead.module.css","UI/DeleteButton/ActionButtons.module.css","App.module.css","components/TableRowNumber/TableRowNumber.module.css","components/NewTableElement/NewTableElement.module.css","components/TableHead/TableHead.jsx","UI/DeleteButton/ActionButtons.js","components/NewTableElement/NewTableElement.jsx","components/EditData/EditData.jsx","components/TableContent/TableContent.jsx","components/TableRowNumber/TableRowNumber.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","TableHead","className","classes","tableHead","rowNumber","rowName","rowNType","rowNColor","rowAction","ActionButtons","props","buttonType","elementType","delete","onClick","deleteItem","edit","editItem","save","saveItem","add","addItem","Fragment","NewTableElement","useState","inputName","setInputName","inputType","setInputType","inputColor","setInputColor","data","value","onChange","event","target","placeholder","type","newItems","JSON","parse","localStorage","getItem","push","name","color","setItem","stringify","setItems","EditData","editedData","dataType","setName","setType","setColor","TableContent","status","rowKey","onEditMode","setOnEditMode","content","entry","splice","closest","id","onClickDeleteButton","currentName","currentColor","onClickEditButton","index","allItems","TableRowNumber","onEditRowMode","setOnEditRowMode","rows","autoFocus","from","to","rowToMove","onChangeRowHandler","rowEdit","App","table","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77179c3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableHead\":\"TableHead_tableHead__2Hu5t\",\"rowNumber\":\"TableHead_rowNumber__5GFfo\",\"rowAction\":\"TableHead_rowAction__3vfUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ActionButtons_delete__2-gJK\",\"edit\":\"ActionButtons_edit__39YdJ\",\"save\":\"ActionButtons_save__14mft\",\"add\":\"ActionButtons_add__2mYtm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3aBuA\",\"table\":\"App_table__4LPPZ\",\"rows\":\"App_rows__2FjHq\",\"data\":\"App_data__1rgjd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowEdit\":\"TableRowNumber_rowEdit__wgB73\",\"rows\":\"TableRowNumber_rows__1TMJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"NewTableElement_data__2gVX6\"};","import React from 'react';\r\nimport classes from './TableHead.module.css';\r\n\r\nconst TableHead = () => {\r\n  return (\r\n    <thead className={classes.tableHead}>\r\n      <tr>\r\n        <th className={classes.rowNumber}></th>\r\n        <th className={classes.rowName}>Name</th>\r\n        <th className={classes.rowNType}>Type</th>\r\n        <th className={classes.rowNColor}>Color</th>\r\n        <th className={classes.rowAction}>Action</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n};\r\n\r\nexport default TableHead;\r\n","import React from 'react';\r\nimport classes from './ActionButtons.module.css';\r\n\r\nconst ActionButtons = (props) => {\r\n  let buttonType = null;\r\n\r\n  switch (props.elementType) {\r\n    case 'delete':\r\n      buttonType = (\r\n        <button className={classes.delete} onClick={props.deleteItem}>\r\n          Delete\r\n        </button>\r\n      );\r\n      break;\r\n    case 'edit':\r\n      buttonType = (\r\n        <button className={classes.edit} onClick={props.editItem}>\r\n          Edit\r\n        </button>\r\n      );\r\n      break;\r\n    case 'save':\r\n      buttonType = (\r\n        <button className={classes.save} onClick={props.saveItem}>\r\n          Save\r\n        </button>\r\n      );\r\n      break;\r\n    case 'add':\r\n      buttonType = (\r\n        <button className={classes.add} onClick={props.addItem}>\r\n          Add Item\r\n        </button>\r\n      );\r\n      break;\r\n    default:\r\n      <span>Delete</span>;\r\n  }\r\n\r\n  return <React.Fragment>{buttonType}</React.Fragment>;\r\n};\r\n\r\nexport default ActionButtons;\r\n","import React, { useState } from 'react';\r\nimport ActionButtons from '../../UI/DeleteButton/ActionButtons';\r\nimport classes from './NewTableElement.module.css';\r\n\r\nconst NewTableElement = (props) => {\r\n  const [inputName, setInputName] = useState('');\r\n  const [inputType, setInputType] = useState('');\r\n  const [inputColor, setInputColor] = useState('');\r\n\r\n  const addEntry = () => {\r\n    const newItems = JSON.parse(localStorage.getItem('allEntries'));\r\n    newItems.push({\r\n      name: inputName,\r\n      type: inputType,\r\n      color: inputColor,\r\n    });\r\n    localStorage.setItem('allEntries', JSON.stringify(newItems));\r\n    props.setItems(JSON.parse(localStorage.getItem('allEntries')));\r\n    setInputName('');\r\n    setInputType('');\r\n    setInputColor('');\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr className={classes.data}>\r\n        <td></td>\r\n        <td>\r\n          <input\r\n            value={inputName}\r\n            onChange={(event) => setInputName(event.target.value)}\r\n            placeholder=\"Enter name\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <select\r\n            value={inputType}\r\n            onChange={(event) => setInputType(event.target.value)}\r\n          >\r\n            <option></option>\r\n            <option>Main</option>\r\n            <option>Side</option>\r\n            <option>Lower</option>\r\n          </select>\r\n        </td>\r\n        <td>\r\n          <input\r\n            value={inputColor}\r\n            type=\"color\"\r\n            onChange={(event) => setInputColor(event.target.value)}\r\n          />\r\n        </td>\r\n        <td>\r\n          <ActionButtons elementType=\"add\" addItem={addEntry}>\r\n            Add Item\r\n          </ActionButtons>\r\n        </td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewTableElement;\r\n","import React from 'react';\r\n\r\nconst EditData = (props) => {\r\n  let editedData = null;\r\n\r\n  switch (props.dataType) {\r\n    case 'name':\r\n      editedData = (\r\n        <input\r\n          value={props.name}\r\n          onChange={(event) => props.setName(event.target.value)}\r\n          placeholder=\"Enter name\"\r\n        />\r\n      );\r\n      break;\r\n    case 'type':\r\n      editedData = (\r\n        <select\r\n          value={props.type}\r\n          onChange={(event) => props.setType(event.target.value)}\r\n        >\r\n          <option></option>\r\n          <option>Main</option>\r\n          <option>Side</option>\r\n          <option>Lower</option>\r\n        </select>\r\n      );\r\n      break;\r\n    case 'color':\r\n      editedData = (\r\n        <input\r\n          onChange={(event) => props.setColor(event.target.value)}\r\n          value={props.color}\r\n          type=\"color\"\r\n        />\r\n      );\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return editedData;\r\n};\r\n\r\nexport default EditData;\r\n","import React, { useState } from 'react';\r\nimport EditData from '../EditData/EditData';\r\nimport ActionButtons from '../../UI/DeleteButton/ActionButtons';\r\n\r\nconst TableContent = (props) => {\r\n  const [name, setName] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [onEditMode, setOnEditMode] = useState({\r\n    status: false,\r\n    rowKey: null,\r\n  });\r\n\r\n  const onClickDeleteButton = (event) => {\r\n    const newItems = JSON.parse(localStorage.getItem('allEntries'));\r\n    newItems.splice(event.target.closest('TR').id, 1);\r\n    localStorage.setItem('allEntries', JSON.stringify(newItems));\r\n    props.setItems(JSON.parse(localStorage.getItem('allEntries')));\r\n  };\r\n\r\n  const onClickEditButton = ({ id, currentName, currentColor }) => {\r\n    setOnEditMode({\r\n      status: true,\r\n      rowKey: id,\r\n    });\r\n    setName(currentName);\r\n    setColor(currentColor);\r\n  };\r\n\r\n  const onSave = (index) => {\r\n    props.allItems[index] = {\r\n      name: name,\r\n      type: type,\r\n      color: color,\r\n    };\r\n    localStorage.setItem('allEntries', JSON.stringify(props.allItems));\r\n    props.setItems(JSON.parse(localStorage.getItem('allEntries')));\r\n\r\n    setOnEditMode({\r\n      status: false,\r\n      rowKey: null,\r\n    });\r\n    setName('');\r\n    setType('');\r\n    setColor('');\r\n  };\r\n\r\n  let content = (\r\n    <React.Fragment>\r\n      <td>{props.entry.name}</td>\r\n      <td>{props.entry.type}</td>\r\n      <td>{props.entry.color}</td>\r\n      <td>\r\n        <ActionButtons\r\n          elementType=\"delete\"\r\n          deleteItem={(entry) => onClickDeleteButton(entry)}\r\n        />\r\n        <ActionButtons\r\n          elementType=\"edit\"\r\n          editItem={() =>\r\n            onClickEditButton({\r\n              id: props.index,\r\n              currentName: props.entry.name,\r\n              currentColor: props.entry.color,\r\n            })\r\n          }\r\n        />\r\n      </td>\r\n    </React.Fragment>\r\n  );\r\n\r\n  if (onEditMode.status && onEditMode.rowKey === props.index) {\r\n    content = (\r\n      <React.Fragment>\r\n        <td>\r\n          <EditData dataType=\"name\" name={name} setName={setName} />\r\n        </td>\r\n        <td>\r\n          <EditData dataType=\"type\" type={type} setType={setType} />\r\n        </td>\r\n        <td>\r\n          <EditData dataType=\"color\" color={color} setColor={setColor} />\r\n        </td>\r\n        <td>\r\n          <ActionButtons\r\n            elementType=\"save\"\r\n            saveItem={() => onSave(props.index, props.entry)}\r\n          />\r\n        </td>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nexport default TableContent;\r\n","import React, { useState } from 'react';\r\nimport classes from './TableRowNumber.module.css';\r\n\r\nconst TableRowNumber = (props) => {\r\n  const [onEditRowMode, setOnEditRowMode] = useState({\r\n    status: false,\r\n    rowKey: null,\r\n  });\r\n\r\n  const onChangeRowHandler = (from, to) => {\r\n    const rowToMove = props.allItems[from];\r\n    props.allItems.splice(from, 1);\r\n    props.allItems.splice(to, 0, rowToMove);\r\n  };\r\n\r\n  const onClickEditRowButton = (id) => {\r\n    setOnEditRowMode({\r\n      status: true,\r\n      rowKey: id,\r\n    });\r\n  };\r\n\r\n  const onSaveRowHandler = () => {\r\n    localStorage.setItem('allEntries', JSON.stringify(props.allItems));\r\n    props.setItems(JSON.parse(localStorage.getItem('allEntries')));\r\n    setOnEditRowMode({\r\n      status: false,\r\n      rowKey: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <td>\r\n      {onEditRowMode.status && onEditRowMode.rowKey === props.index ? (\r\n        <div className={classes.rows}>\r\n          <input\r\n            autoFocus\r\n            onChange={(event) =>\r\n              onChangeRowHandler(props.index, event.target.value - 1)\r\n            }\r\n          />\r\n          <span onClick={() => onSaveRowHandler()}></span>\r\n        </div>\r\n      ) : (\r\n        <div className={classes.rows}>\r\n          {props.index + 1}\r\n          <div\r\n            className={classes.rowEdit}\r\n            onClick={() => onClickEditRowButton(props.index)}\r\n          ></div>\r\n        </div>\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nexport default TableRowNumber;\r\n","import React, { useState } from 'react';\nimport classes from './App.module.css';\nimport TableHead from './components/TableHead/TableHead';\nimport NewTableElement from './components/NewTableElement/NewTableElement';\nimport TableContent from './components/TableContent/TableContent';\nimport TableRowNumber from './components/TableRowNumber/TableRowNumber';\n\nconst App = () => {\n  const items = [\n    { name: 'Item1', type: 'Main', color: '#112233' },\n    { name: 'Item1', type: 'Main', color: '#112233' },\n  ];\n\n  if (JSON.parse(localStorage.getItem('allEntries')) === null) {\n    localStorage.setItem('allEntries', JSON.stringify(items));\n  }\n\n  const [allItems, setItems] = useState(\n    JSON.parse(localStorage.getItem('allEntries'))\n  );\n\n  return (\n    <div className={classes.App}>\n      <table className={classes.table}>\n        <TableHead />\n        <tbody>\n          {allItems.map((entry, index) => (\n            <tr className={classes.data} id={index} key={index}>\n              <TableRowNumber\n                allItems={allItems}\n                setItems={setItems}\n                index={index}\n              />\n              <TableContent\n                index={index}\n                entry={entry}\n                allItems={allItems}\n                setItems={setItems}\n              />\n            </tr>\n          ))}\n          <NewTableElement setItems={setItems} />\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}